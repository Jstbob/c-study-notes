{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"index","text":""},{"location":"#ch01-c","title":"ch01 C\u8bed\u8a00\u57fa\u672c\u4ecb\u7ecd","text":""},{"location":"#ch02","title":"ch02 \u53d8\u91cf\u58f0\u660e\u3001\u5b9a\u4e49\u548c\u8303\u56f4","text":""},{"location":"#ch03","title":"ch03 \u6570\u636e\u7c7b\u578b","text":""},{"location":"#ch04","title":"ch04 \u50a8\u5b58\u7c7b","text":""},{"location":"#ch05","title":"ch05 \u8f93\u5165\u8f93\u51fa","text":""},{"location":"#ch06","title":"ch06 \u8fd0\u7b97\u7b26","text":""},{"location":"#ch07","title":"ch07 \u9884\u5904\u7406\u5668","text":""},{"location":"#ch08","title":"ch08 \u6570\u7ec4\u548c\u5b57\u7b26\u4e32","text":""},{"location":"#15-c","title":"15.  \u5982\u4f55\u5728 C \u8bed\u8a00\u4e2d\u52a8\u6001\u5206\u914d\u4e8c\u7ef4\u6570\u7ec4\uff1f","text":""},{"location":"#16-c-2d","title":"16. \u5982\u4f55\u5728 C \u4e2d\u5c06 2D \u6570\u7ec4\u505a\u4e3a\u53c2\u6570\u4f20\u9012\uff1f","text":""},{"location":"#17-b-c","title":"17-b. C \u8bed\u8a00\u4e2d\u7684\u591a\u7ef4\u6570\u7ec4","text":""},{"location":"#17-c","title":"17. \u5982\u4f55\u5728\u591a\u884c C \u4e2d\u7f16\u5199\u957f\u5b57\u7b26\u4e32","text":""},{"location":"#18","title":"18. \u65e0\u6cd5\u521b\u5efa\u6570\u7ec4\u7684\u6570\u636e\u7c7b\u578b\u6709\u54ea\u4e9b\uff1f","text":""},{"location":"#19-vla","title":"19. \u53ef\u53d8\u957f\u5ea6\u6570\u7ec4 VLA","text":""},{"location":"#20","title":"20. \u5feb\u901f\u5b9a\u4e49\u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u5143\u7d20","text":""},{"location":"#21","title":"21. \u8d8a\u754c\u8bbf\u95ee\u6570\u7ec4","text":""},{"location":"#22","title":"22. \u590d\u5236\u5b57\u7b26\u4e32","text":""},{"location":"#23","title":"23. \u6bd4\u8f83\u5b57\u7b26\u4e32","text":""},{"location":"#25","title":"25. \u5982\u4f55\u6309\u503c\u4f20\u9012\u6570\u7ec4\uff1f","text":""},{"location":"#26","title":"26. \u53cd\u8f6c\u5b57\u7b26\u4e32","text":""},{"location":"#27","title":"27. \u5b57\u7b26\u4e32\u64cd\u4f5c","text":""},{"location":"#ch09","title":"ch09 \u63a7\u5236\u8bed\u53e5","text":""},{"location":"#9-switch","title":"9. \u5728 switch \u8bed\u53e5\u4e2d\u4f7f\u7528\u8303\u56f4\u5339\u914d","text":""},{"location":"#ch10","title":"ch10 \u51fd\u6570","text":""},{"location":"#5","title":"5. \u53ef\u53d8\u957f\u5ea6\u51fd\u6570\u53c2\u6570\u7684\u4f7f\u7528","text":""},{"location":"#ch11","title":"ch11 \u6307\u9488","text":""},{"location":"#ch12","title":"ch12 \u679a\u4e3e\u3001\u7ed3\u6784\u548c\u8054\u5408\u4f53","text":""},{"location":"#ch13","title":"ch13 \u5185\u5b58\u7ba1\u7406","text":""},{"location":"#ch14","title":"ch14 \u6587\u4ef6\u5904\u7406","text":""},{"location":"#2-eof-feof","title":"2. EOF \u548c feof() \u7684\u533a\u522b","text":""},{"location":"#3-fopen","title":"3. fopen() \u7528\u4e8e\u5199\u5165\u73b0\u6709\u6587\u4ef6","text":""},{"location":"#ch15","title":"ch15 \u7ec3\u4e60\u9898","text":""},{"location":"#ch16","title":"ch16 \u6742\u9879","text":""},{"location":"#ch17-c","title":"ch17 C\u8bed\u8a00\u9762\u8bd5\u95ee\u9898","text":""},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/15.%20%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%EF%BC%9F/","title":"15.  \u5982\u4f55\u5728 C \u8bed\u8a00\u4e2d\u52a8\u6001\u5206\u914d\u4e8c\u7ef4\u6570\u7ec4\uff1f","text":""},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/15.%20%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%EF%BC%9F/#1","title":"1. \u4f7f\u7528\u5355\u4e2a\u6307\u9488\uff0c\u548c\u8bbf\u95ee\u7b97\u6cd5","text":"<p>\u5206\u914d\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u5c06\u4e8c\u7ef4\u6570\u7ec4\u7684\u7d22\u5f15\u8f6c\u6362\u6210\u4e00\u7ef4\u6570\u7ec4\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\n#include &lt;stdlib.h&gt;\n\n\n\nint main() {\n\n\u00a0 const int length = 6;\n\n\u00a0 const int rows = 2;\n\n\u00a0 const int cols = 3;\n\n\u00a0 int *array = malloc(length);\n\n\u00a0 for (int i = 0; i &lt; length; ++i) {\n\n\u00a0 \u00a0 array[i] = i;\n\n\u00a0 }\n\n\u00a0 for (int i = 0; i &lt; length; ++i) {\n\n\u00a0 \u00a0 printf(\"%d,\", array[i]);\n\n\u00a0 }\n\n\u00a0 printf(\"\\n\");\n\n\n\n\u00a0 for (int i = 0; i &lt; rows; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; cols; ++j) {\n\n\u00a0 \u00a0 \u00a0 // 0;0,1,2 1;0,1,2\n\n\u00a0 \u00a0 \u00a0 int index = i * cols + j;\n\n\u00a0 \u00a0 \u00a0 printf(\"index:%d,%d\\t\", index, array[index]);\n\n\u00a0 \u00a0 }\n\n\u00a0 \u00a0 printf(\"\\n\");\n\n\u00a0 }\n\n\u00a0 free(array);\n\n}\n</code></pre> <p>output:</p> <pre><code>0,1,2,3,4,5,\nindex:0,0       index:1,1       index:2,2\nindex:3,3       index:4,4       index:5,5\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/15.%20%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%EF%BC%9F/#2-vla","title":"2. \u4f7f\u7528 VLA \u6570\u7ec4\u6307\u9488","text":"<pre><code>#include &lt;stdio.h&gt;\n\n#include &lt;stdlib.h&gt;\n\n\n\nint main() {\n\n\u00a0 int rows = 2;\n\n\u00a0 int cols = 3;\n\n\u00a0 int *array[rows]; // VLA\n\n\u00a0 for (int i = 0; i &lt; rows; ++i) {\n\n\u00a0 \u00a0 array[i] = malloc(cols * sizeof(int));\n\n\u00a0 }\n\n\n\n\u00a0 for (int i = 0; i &lt; rows; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; cols; ++j) {\n\n\u00a0 \u00a0 \u00a0 array[i][j] = cols * i + j;\n\n\u00a0 \u00a0 }\n\n\u00a0 }\n\n\n\n\u00a0 for (int i = 0; i &lt; rows; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; cols; ++j) {\n\n\u00a0 \u00a0 \u00a0 printf(\"%d,\", array[i][j]);\n\n\u00a0 \u00a0 }\n\n\u00a0 \u00a0 printf(\"\\n\");\n\n\u00a0 }\n\n\n\n\u00a0 for (int i = 0; i &lt; rows; ++i) {\n\n\u00a0 \u00a0 free(array[i]);\n\n\u00a0 }\n\n}\n</code></pre> <p>output:</p> <pre><code>0,1,2,\n3,4,5,\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/15.%20%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%EF%BC%9F/#3-malloc","title":"3. \u4f7f\u7528\u4e8c\u7ea7\u6307\u9488\u548c\u4e00\u4e2amalloc","text":"<pre><code>#include &lt;complex.h&gt;\n\n#include &lt;stdio.h&gt;\n\n#include &lt;stdlib.h&gt;\n\n\n\nint main() {\n\n\u00a0 const int ROWS = 3;\n\n\u00a0 const int COLS = 4;\n\n\u00a0 int *p = malloc(sizeof(int *) * ROWS + sizeof(int) * ROWS * COLS);\n\n\u00a0 int **arr = &amp;p;\n\n\n\n\u00a0 for (int i = 0; i &lt; ROWS; ++i) {\n\n\u00a0 \u00a0 arr[i] = &amp;p[ROWS + COLS * i];\n\n\u00a0 }\n\n\n\n\u00a0 for (int i = 0; i &lt; ROWS; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; COLS; ++j) {\n\n\u00a0 \u00a0 \u00a0 arr[i][j] = COLS * i + j;\n\n\u00a0 \u00a0 }\n\n\u00a0 }\n\n\n\n\u00a0 for (int i = 0; i &lt; ROWS; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; COLS; ++j) {\n\n\u00a0 \u00a0 \u00a0 printf(\"%d\\t\", arr[i][j]);\n\n\u00a0 \u00a0 }\n\n\u00a0 \u00a0 printf(\"\\n\");\n\n\u00a0 }\n\n\n\n\u00a0 free(p);\n\n\u00a0 arr = NULL;\n\n}\n</code></pre> <p>output:</p> <pre><code>0       1       2       3 \n4       5       6       7 \n8       9       10      11\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/15.%20%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%EF%BC%9F/#4","title":"4. \u4f7f\u7528\u6307\u5411\u6307\u9488\u7684\u6307\u9488","text":"<pre><code>#include &lt;stdio.h&gt;\n\n#include &lt;stdlib.h&gt;\n\n\n\nint main() {\n\n\u00a0 const int ROWS = 3;\n\n\u00a0 const int COLS = 4;\n\n\u00a0 int **array = malloc(sizeof(int *) * ROWS);\n\n\u00a0 for (int i = 0; i &lt; ROWS; ++i) {\n\n\u00a0 \u00a0 array[i] = malloc(sizeof(int) * COLS);\n\n\u00a0 }\n\n\n\n\u00a0 for (int i = 0; i &lt; ROWS; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; COLS; ++j) {\n\n\u00a0 \u00a0 \u00a0 array[i][j] = COLS * i + j;\n\n\u00a0 \u00a0 }\n\n\u00a0 }\n\n\n\n\u00a0 for (int i = 0; i &lt; ROWS; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; COLS; ++j) {\n\n\u00a0 \u00a0 \u00a0 printf(\"%d\\t\", array[i][j]);\n\n\u00a0 \u00a0 }\n\n\u00a0 \u00a0 printf(\"\\n\");\n\n\u00a0 }\n\n\n\n\u00a0 for (int i = 0; i &lt; ROWS; ++i) {\n\n\u00a0 \u00a0 free(array[i]);\n\n\u00a0 }\n\n\u00a0 free(array);\n\n}\n</code></pre> <p>output:</p> <pre><code>0       1       2       3 \n4       5       6       7 \n8       9       10      11\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/15.%20%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%EF%BC%9F/#5-vla","title":"5. \u6307\u5411\u4e8c\u7ef4 VLA \u6570\u7ec4\u7684\u6307\u9488\uff08\u4f18\u5148\u4f7f\u7528\uff09","text":"<p>\u6ce8\u610f VLA \u6570\u7ec4\u4e00\u5b9a\u8981\u662f\u6307\u9488\u5f62\u5f0f\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\n#include &lt;stdlib.h&gt;\n\n\n\nint main() {\n\n\u00a0 int rows = 3;\n\n\u00a0 int cols = 4;\n\n\u00a0 int(*array)[rows][cols] = malloc(sizeof(int) * rows * cols);\n\n\u00a0 for (int i = 0; i &lt; rows; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; cols; ++j) {\n\n\u00a0 \u00a0 \u00a0 (*array)[i][j] = cols * i + j;\n\n\u00a0 \u00a0 }\n\n\u00a0 }\n\n\n\n\u00a0 for (int i = 0; i &lt; rows; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; cols; ++j) {\n\n\u00a0 \u00a0 \u00a0 printf(\"%d\\t\", (*array)[i][j]);\n\n\u00a0 \u00a0 }\n\n\u00a0 \u00a0 printf(\"\\n\");\n\n\u00a0 }\n\n}\n</code></pre> <p>output:</p> <pre><code>0       1       2       3\n4       5       6       7\n8       9       10      11\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/16.%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E4%B8%AD%E5%B0%86%202D%20%E6%95%B0%E7%BB%84%E5%81%9A%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%EF%BC%9F/","title":"16. \u5982\u4f55\u5728 C \u4e2d\u5c06 2D \u6570\u7ec4\u505a\u4e3a\u53c2\u6570\u4f20\u9012\uff1f","text":"<p>\u5728 C \u4e2d\u4f7f\u7528\u4e8c\u7ef4\u6570\u7ec4\u505a\u53c2\u6570\u4f20\u9012\uff1a</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/16.%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E4%B8%AD%E5%B0%86%202D%20%E6%95%B0%E7%BB%84%E5%81%9A%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%EF%BC%9F/#1","title":"1. \u4e24\u4e2a\u7ef4\u5ea6\u662f\u5e38\u91cf\u65f6","text":"<pre><code>#include &lt;stdio.h&gt;\n\nconst int ROWS = 2;\nconst int COLS = 3;\n\nvoid printfArray(int array[ROWS][COLS]) {\n\u00a0 for (int i = 0; i &lt; ROWS; ++i) {\n\u00a0 \u00a0 for (int j = 0; j &lt; COLS; ++j) {\n\u00a0 \u00a0 \u00a0 printf(\"%d\\t\", array[i][j]);\n\u00a0 \u00a0 }\n\u00a0 \u00a0 printf(\"\\n\");\n\u00a0 }\n}\n\nint main() {\n\u00a0 int array[ROWS][COLS] = {{1, 2, 3}, {4, 5, 6}};\n\u00a0 printfArray(array);\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>1       2       3\n4       5       6\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/16.%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E4%B8%AD%E5%B0%86%202D%20%E6%95%B0%E7%BB%84%E5%81%9A%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%EF%BC%9F/#2","title":"2. \u7b2c\u4e8c\u4e2a\u7ef4\u5ea6\u662f\u5e38\u91cf\u65f6","text":"<pre><code>#include &lt;stdio.h&gt;\n\n\n\nconst int COLS = 3;\n\n\n\nvoid printArray(int r,int array[][COLS]){\n\n\u00a0 \u00a0 for(int i=0;i&lt;r;++i){\n\n\u00a0 \u00a0 \u00a0 \u00a0 for(int j=0;j&lt;COLS;++j){\n\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 printf(\"%d\\t\",array[i][j]);\n\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\n\u00a0 \u00a0 \u00a0 \u00a0 printf(\"\\n\");\n\n\u00a0 \u00a0 }\n\n}\n\n\n\nint main(){\n\n\u00a0 \u00a0 int arr[][3]={{1,2,3},{4,5,6}};\n\n\u00a0 \u00a0 printArray(2, arr);\n\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>1       2       3\n4       5       6\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/16.%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E4%B8%AD%E5%B0%86%202D%20%E6%95%B0%E7%BB%84%E5%81%9A%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%EF%BC%9F/#3-vla","title":"3. \u4f7f\u7528 VLA \u53ef\u53d8\u6570\u7ec4\uff08\u4f18\u5148\u4f7f\u7528\uff09","text":"<p>\u5982\u679c\u7f16\u8bd1\u5668\u662f\u548c <code>C99</code> \u517c\u5bb9\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u53ef\u53d8\u6570\u7ec4\u4f20\u9012\u53c2\u6570\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\n\n\nvoid printArray(int m, int n, int array[m][n]) {\n\n\u00a0 for (int i = 0; i &lt; m; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; n; ++j) {\n\n\u00a0 \u00a0 \u00a0 printf(\"%d\\t\", array[i][j]);\n\n\u00a0 \u00a0 }\n\n\u00a0 \u00a0 printf(\"\\n\");\n\n\u00a0 }\n\n}\n\n\n\nint main() {\n\n\u00a0 int array[2][3] = {{1, 2, 3}, {4, 5, 6}};\n\n\u00a0 printArray(2, 3, array);\n\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>1       2       3\n4       5       6\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/16.%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E4%B8%AD%E5%B0%86%202D%20%E6%95%B0%E7%BB%84%E5%81%9A%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%EF%BC%9F/#4","title":"4. \u4f7f\u7528\u5355\u6307\u9488","text":"<pre><code>#include &lt;stdio.h&gt;\n\n\n\nvoid printArray(int m, int n, int *array) {\n\n\u00a0 for (int i = 0; i &lt; m; ++i) {\n\n\u00a0 \u00a0 for (int j = 0; j &lt; n; ++j) {\n\n\u00a0 \u00a0 \u00a0 printf(\"%d\\t\", array[i * m + j]);\n\n\u00a0 \u00a0 }\n\n\u00a0 \u00a0 printf(\"\\n\");\n\n\u00a0 }\n\n}\n\n\n\nint main() {\n\n\u00a0 int array[2][3] = {{1, 2, 3}, {4, 5, 6}};\n\n\u00a0 printArray(2, 3, (int *)&amp;array);\n\n}\n</code></pre> <p>\u8f93\u51fa\uff1a</p> <pre><code>1       2       3\n3       4       5\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/16.%20%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E4%B8%AD%E5%B0%86%202D%20%E6%95%B0%E7%BB%84%E5%81%9A%E4%B8%BA%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%EF%BC%9F/#5","title":"5. \u4f7f\u7528\u4e8c\u7ea7\u6307\u9488","text":"<p>\u8f93\u51fa\uff1a</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/17-b.%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/","title":"17-b. C \u8bed\u8a00\u4e2d\u7684\u591a\u7ef4\u6570\u7ec4","text":""},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/17-b.%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#_1","title":"\u58f0\u660e\u591a\u7ef4\u6570\u7ec4","text":"<pre><code>data_type array_name[size1][size2]....[sizeN];\n</code></pre> <p>data_type\uff1a\u5143\u7d20\u7684\u7c7b\u578b\uff1b array_name\uff1a\u6570\u7ec4\u7684\u6807\u8bc6\u7b26\uff1b size1\uff0csize2\uff0c... sizeN\uff1a\u6bcf\u4e2a\u7ef4\u5ea6\u7684\u5927\u5c0f\uff1b</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/17-b.%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#_2","title":"\u591a\u7ef4\u6570\u7ec4\u7684\u51e0\u4f55\u7406\u89e3","text":"<p>![[Pasted image 20230331152720.png]]</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/17-b.%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84/#_3","title":"\u591a\u7ef4\u6570\u7ec4\u521d\u59cb\u5316","text":"<pre><code>// C program to print elements of Three-Dimensional Array\n\n#include &lt;stdio.h&gt;\n\nint main(void)\n{\n    // initializing the 3-dimensional array\n    int x[2][3][2] = { { { 0, 1 }, { 2, 3 }, { 4, 5 } },\n                    { { 6, 7 }, { 8, 9 }, { 10, 11 } } };\n\n    // output each element's value\n    for (int i = 0; i &lt; 2; ++i) {\n        for (int j = 0; j &lt; 3; ++j) {\n            for (int k = 0; k &lt; 2; ++k) {\n                printf(\"Element at x[%i][%i][%i] = %d\\n\", i,\n                    j, k, x[i][j][k]);\n            }\n        }\n    }\n    return (0);\n}\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/17.%20%E5%A6%82%E4%BD%95%E5%9C%A8%E5%A4%9A%E8%A1%8C%20C%20%E4%B8%AD%E7%BC%96%E5%86%99%E9%95%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"17. \u5982\u4f55\u5728\u591a\u884c C \u4e2d\u7f16\u5199\u957f\u5b57\u7b26\u4e32","text":"<p>\u60f3\u8c61\u4e00\u4e0b\u6211\u4eec\u60f3\u5728 C \u6216 C++ \u4e2d\u4f7f\u7528\u6216\u6253\u5370\u957f\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\uff0c\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\uff1f \u5728 C/C++ \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4e2d\u95f4\u7684\u4efb\u4f55\u4e00\u70b9\u4f7f\u7528\u4e2d\u95f4\u7684\u4e24\u4e2a\u53cc\u5f15\u53f7\u6765\u65ad\u5f00\u5b57\u7b26\u4e32\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u6f14\u793a\u76f8\u540c\u7684\u5185\u5bb9\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid print_str(const char *name, const char *str) {\n\u00a0 \u00a0 printf(\"%s: %s\\n\", name, str);\n}\n\nint main() {\n\u00a0 \u00a0 const char *str1 = \"helloworld\";\n\u00a0 \u00a0 const char *str2 = \"hello\"\"world\";\n\u00a0 \u00a0 const char *str3 = \"hello\"\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"wolrd\";\n\u00a0 \u00a0 print_str(\"str1\", str1);\n\u00a0 \u00a0 print_str(\"str2\", str2);\n\u00a0 \u00a0 print_str(\"str3\", str3);\n}\n</code></pre> <p>output:</p> <pre><code>str1: helloworld\nstr2: helloworld\nstr3: hellowolrd\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/18.%20%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F/","title":"18. \u65e0\u6cd5\u521b\u5efa\u6570\u7ec4\u7684\u6570\u636e\u7c7b\u578b\u6709\u54ea\u4e9b\uff1f","text":"<p>\u5728 C \u4e2d\uff0c\u53ef\u4ee5\u5305\u542b\u9664\u4ee5\u4e0b\u6570\u7ec4\u4e4b\u5916\u7684\u6240\u6709\u7c7b\u578b\u7684\u6570\u7ec4\u3002 1\uff09\u65e0\u6548\u3002 2\uff09\u529f\u80fd\u3002 \u4f8b\u5982\u4e0b\u5217\u4f8b\u5b50\uff1a</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/18.%20%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F/#void","title":"\u65e0\u6cd5\u4e3a void \u7c7b\u578b\u521b\u5efa\u6570\u7ec4","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    void array[10];     // \u4e0d\u80fd\u4e3a void \u7c7b\u578b\u521b\u5efa\u6570\u7ec4\n}\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/18.%20%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F/#_1","title":"\u65e0\u6cd5\u4e3a\u51fd\u6570\u521b\u5efa\u6570\u7ec4","text":"<pre><code>#include &lt;stdio.h&gt;\n\nvoid show(){}\n\nint main(){\n    show array[10];     // \u4e0d\u80fd\u4e3a\u51fd\u6570\u7c7b\u578b\u521b\u5efa\u6570\u7ec4\n}\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/18.%20%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F/#void_1","title":"\u4f46\u662f\u53ef\u4ee5\u4e3a void* \u4e07\u80fd\u6307\u9488\u7c7b\u578b\u521b\u5efa\u6570\u7ec4","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    void *array[10];\n}\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/18.%20%E6%97%A0%E6%B3%95%E5%88%9B%E5%BB%BA%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F/#_2","title":"\u4e5f\u53ef\u4ee5\u4e3a\u51fd\u6570\u6307\u9488\u521b\u5efa\u6570\u7ec4","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\ntypedef void (*FUN)();\n\nint main() {\n    FUN array[10];\n    memset(&amp;array, 0, sizeof(FUN) * 10);\n    for (int i = 0; i &lt; 10; ++i) {\n        printf(\"%p\\n\", array[i]);\n    }\n}\n</code></pre> <p>output:</p> <pre><code>0000000000000000\n0000000000000000\n0000000000000000\n0000000000000000\n0000000000000000\n0000000000000000\n0000000000000000\n0000000000000000\n0000000000000000\n0000000000000000\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/19.%20%E5%8F%AF%E5%8F%98%E9%95%BF%E5%BA%A6%E6%95%B0%E7%BB%84%20VLA/","title":"19. \u53ef\u53d8\u957f\u5ea6\u6570\u7ec4 VLA","text":"<p>\u67e5\u770b\u4ee5\u4e0b\u4f8b\u5b50\uff0cVLA \u5728\u7ed3\u6784\u4f53\u4e2d\u7684\u4f7f\u7528\uff1a</p> <pre><code>#include &lt;stdbool.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\ntypedef struct _Student {\n    int stu_id;\n    int name_len;\n    int struct_size;\n    char name[];        // \u4f7f\u7528 VLA\n} Student;\n\nbool create_student(Student **s, int id, char name[]) {\n    int name_len = strlen(name) + 1;\n    int struct_size = sizeof(Student) + name_len;\n    *s = (Student *)malloc(struct_size);\n    if (!s)\n        return false;\n    (*s)-&gt;stu_id = id;\n    (*s)-&gt;name_len = name_len;\n    (*s)-&gt;struct_size = struct_size;\n    strcpy_s((*s)-&gt;name, name_len, name);\n    return true;\n}\n\nvoid free_student(Student *s) {\n    free(s);\n}\n\nint main() {\n    Student *s;\n    create_student(&amp;s, 7711, \"Jstbob\");\n    printf(\"id:%d, name:%s\\n\", s-&gt;stu_id, s-&gt;name);\n    free_student(s);\n}\n</code></pre> <p>output:</p> <pre><code>id:7711, name:Jstbob\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/20.%20%E5%BF%AB%E9%80%9F%E5%AE%9A%E4%B9%89%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E5%85%83%E7%B4%A0/","title":"20. \u5feb\u901f\u5b9a\u4e49\u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u5143\u7d20","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    // arr = { 1,1,1,1,1,0,0,1,1,1 }\n    int arr[10] = {[0 ... 4] = 1, [7 ... 9] = 2};\n    for (int i = 0; i &lt; sizeof(arr) / sizeof(arr[0]); ++i) {\n        printf(\"%d,\", arr[i]);\n    }\n    printf(\"\\n\");\n}\n</code></pre> <p>output:</p> <pre><code>1,1,1,1,1,0,0,2,2,2,\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/21.%20%E8%B6%8A%E7%95%8C%E8%AE%BF%E9%97%AE%E6%95%B0%E7%BB%84/","title":"21. \u8d8a\u754c\u8bbf\u95ee\u6570\u7ec4","text":""},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/21.%20%E8%B6%8A%E7%95%8C%E8%AE%BF%E9%97%AE%E6%95%B0%E7%BB%84/#_1","title":"\u8d8a\u754c\u8bfb\u53d6\u6570\u7ec4","text":"<p>\u5728 c \u8bed\u8a00\u4e2d\uff0c\u4e0d\u5bf9\u65e0\u6548\u7d22\u5f15\u8fdb\u884c\u68c0\u67e5\uff0c\u5bf9\u65e0\u6548\u7d22\u5f15\u8fdb\u884c\u8bfb\u53d6\u6216\u5199\u5165\u4f1a\u5bfc\u81f4 UB \u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int arr[5]={1,2,3,4,5};\n    printf(\"%d\\n\",arr[10]);\n}\n</code></pre> <p>output:</p> <pre><code>0\n</code></pre> <p>\u5728<code>clang 16.0.0</code>\u4e2d\u53ef\u4ee5\u8bfb\u53d6\u8d8a\u754c\u7684\u6570\u7ec4\u5143\u7d20\uff0c\u4f46\u8fd9\u5c5e\u4e8e\u672a\u5b9a\u4e49\u884c\u4e3a\uff0c\u5728\u4e0d\u540c\u7f16\u8bd1\u5668\u6709\u4e0d\u540c\u7684\u5b9e\u73b0\u3002</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/21.%20%E8%B6%8A%E7%95%8C%E8%AE%BF%E9%97%AE%E6%95%B0%E7%BB%84/#_2","title":"\u8d8a\u754c\u5199\u5165\u6570\u7ec4","text":"<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    int arr[5] = {1, 2, 3, 4, 5};\n    arr[10] = 10;\n    printf(\"%d\\n\", arr[10]);\n}\n</code></pre> <p>output:</p> <pre><code>10\n</code></pre> <p>\u5728<code>clang 16.0.0</code>\u4e2d\u53ef\u4ee5\u6b63\u5e38\u7f16\u8bd1\u548c\u8fd0\u884c\u3002 output with gcc: ![[Pasted image 20230401004735.png]] \u5728<code>gcc 12.2.0</code>\u4e2d\uff0c\u80fd\u591f\u6253\u5370\u7ed3\u679c\uff0c\u4f46\u662f\u4f1a\u8fd0\u884c\u9519\u8bef\u3002</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/22.%20%E5%A4%8D%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"22. \u590d\u5236\u5b57\u7b26\u4e32","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nint main(){\n    char str1[]=\"hello world\";\n    char* str2=(char*)malloc(sizeof(str1));\n    strcpy(str2, str1);\n    printf(\"%s\\n\",str2);\n}\n</code></pre> <p>output:</p> <pre><code>hello world\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/23.%20%E6%AF%94%E8%BE%83%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"23. \u6bd4\u8f83\u5b57\u7b26\u4e32","text":"<p>\u5728 c \u8bed\u8a00\u4e2d\uff0c\u5e38\u7528 <code>strcmp</code> \u51fd\u6570\u6765\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f1a\u8fd4\u56de\u4e09\u79cd\u7ed3\u679c\u7684\u503c\u3002</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/23.%20%E6%AF%94%E8%BE%83%E5%AD%97%E7%AC%A6%E4%B8%B2/#0","title":"== 0","text":"<p>\u4e24\u4e2a\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u540c\u3002</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/23.%20%E6%AF%94%E8%BE%83%E5%AD%97%E7%AC%A6%E4%B8%B2/#0_1","title":"&gt; 0","text":"<p>\u4ece\u5de6\u5f80\u53f3\u5f00\u59cb\u6bd4\u8f83\uff0c\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 ASCII \u503c &gt; \u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u503c\u3002</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/23.%20%E6%AF%94%E8%BE%83%E5%AD%97%E7%AC%A6%E4%B8%B2/#0_2","title":"&lt; 0","text":"<p>\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u4e0d\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u524d\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684 ASCII \u503c &lt; \u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u503c\u3002</p> <p>\u8003\u8651\u4ee5\u4e0b\u4ee3\u7801\uff0c\u4e0d\u540c\u60c5\u51b5\u4e0b\u7684\u6bd4\u8f83\u60c5\u51b5\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n    printf(\"%d\\n\", strcmp(\"hello\", \"hello\"));           // \u5b57\u7b26\u76f8\u540c\n    printf(\"%d\\n\", strcmp(\"hello\", \"world\"));           // \u524d\u5b57\u7b26\u7b2c\u4e00\u4e2a\u4e0d\u5339\u914d\u5b57\u7b26 &lt; \u540e\u8005\n    printf(\"%d\\n\", strcmp(\"world\", \"hello\"));           // \u524d\u5b57\u7b26\u7b2c\u4e00\u4e2a\u4e0d\u5339\u914d\u81ea\u7b26 &gt; \u540e\u8005\n\n    printf(\"%d\\n\", strcmp(\"hello\", \"hello jstbobo\"));   // \u7a7a\u5b57\u7b26 &lt; \u5b57\u7b26\uff0c\u6240\u4ee5\u7ed3\u679c\u4e3a -1\n    printf(\"%d\\n\", strcmp(\"helloJ\", \"hello\"));          // \u5b57\u7b26 'J' &gt; '\\x00'\uff0c\u6240\u4ee5\u7ed3\u679c\u4e3a 1\n}\n</code></pre> <p>output:</p> <pre><code>0 \n-1\n1 \n-1\n1\n</code></pre>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/25.%20%E5%A6%82%E4%BD%95%E6%8C%89%E5%80%BC%E4%BC%A0%E9%80%92%E6%95%B0%E7%BB%84%EF%BC%9F/","title":"25. \u5982\u4f55\u6309\u503c\u4f20\u9012\u6570\u7ec4\uff1f","text":"<p>\u5f53\u6211\u4eec\u5c06\u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u9012\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u5728\u4f20\u9012\u6570\u7ec4\u7684\u6307\u9488\uff0c\u90a3\u4e48\u600e\u4e48\u6309\u503c\u4f20\u9012\u6570\u7ec4\uff0c\u5373\u4f20\u9012\u6570\u7ec4\u65f6\uff0c\u5728\u51fd\u6570\u4e2d\u4fdd\u6709\u6570\u7ec4\u7684\u526f\u672c\u3002</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/25.%20%E5%A6%82%E4%BD%95%E6%8C%89%E5%80%BC%E4%BC%A0%E9%80%92%E6%95%B0%E7%BB%84%EF%BC%9F/#_1","title":"\u4f7f\u7528\u7ed3\u6784\u4f53\u5bf9\u5b9a\u957f\u6570\u7ec4\u8fdb\u884c\u5305\u88c5","text":""},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/26.%20%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"26. \u53cd\u8f6c\u5b57\u7b26\u4e32","text":"<p>\u53cd\u8f6c\u5b57\u7b26\u4e32\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u6bd4\u5982\u4f7f\u7528 \u6808\u3001swap\u3001\u7f13\u5b58\u6570\u7ec4 \u7b49\u3002 \u67e5\u770b\u4ee5\u4e0b\u7684\u4f8b\u5b50\uff0c\u904d\u5386\u4ea4\u6362\u9996\u5c3e\u5143\u7d20\u3002</p> <pre><code>#include &lt;stddef.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nvoid swap_chr(char *first, char *second) {\n    char tmp = *first;\n    *first = *second;\n    *second = tmp;\n}\n\nvoid reverse_str(char *str) {\n    char *begin = str;\n    char *end = str + strlen(str) - 1;          // \u6ce8\u610f\u8fd9\u91cc\u7684 -1\n    while (begin &lt; end) {\n        swap_chr(begin, end);\n        ++begin;\n        --end;\n    }\n}\n\nint main() {\n    const char *str1 = \"hello world\"; // \u5bf9\u4e8e\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff0c\u65e0\u8bba\u5e26\u4e0d\u5e26 const \uff0c\u90fd\u4e0d\u80fd\u4fee\u6539\u5b83\u7684\u503c\n    size_t str1_size = strlen(str1) + 1;\n    char *str = (char *)malloc(str1_size);\n    strcpy_s(str, str1_size, str1);\n    printf(\"%s\\n\", str);\n    reverse_str(str);\n    printf(\"%s\\n\", str);\n    free(str);\n}\n</code></pre> <p>output:</p> <pre><code>hello world\ndlrow olleh\n</code></pre> <p>\u5728\u8fd0\u884c\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u53d1\u751f\u4e86\u4e00\u4e2a\u6709\u8da3\u7684 bug\uff0c\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u7f16\u8bd1\u65f6\uff0c\u4f1a\u8fdb\u5165\u6570\u636e\u533a\uff0c\u6240\u4ee5\u7a0b\u5e8f\u4e0d\u80fd\u4fee\u6539\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u7684\u503c\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    char *str = \"hello wolrd\";      // \u652f\u7b26\u4e32\u5b57\u9762\u91cf\uff0c\u65e0\u8bba\u5e26\u4e0d\u5e26 const \uff0c\u90fd\u4e0d\u80fd\u4fee\u6539\u5b83\u7684\u503c\n    printf(\"%s\\n\", str);\n    str[0] = 'w';                   // UB\n    printf(\"%s\\n\", str);\n}\n</code></pre> <p>\u53ef\u4ee5\u6b63\u5e38\u7f16\u8bd1\uff0c\u8fd0\u884c\u65f6\u51fa\u73b0\u5185\u5b58\u8bbf\u95ee\u9519\u8bef\u3002 ![[Pasted image 20230401021815.png]]</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/27.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/","title":"27. \u5b57\u7b26\u4e32\u64cd\u4f5c","text":""},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/27.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/#strpbrk","title":"strpbrk()","text":"<p>\u8fd4\u56de\u7b2c\u4e00\u4e2a\u88ab\u5206\u9694\u7b26\u6253\u65ad\u7684\u4f4d\u7f6e\u6307\u9488\u3002</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/27.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/#strspn","title":"strspn()","text":"<p>\u76f4\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u5b57\u7b26\u96c6\u4e0d\u5339\u914d\u4e3a\u6b62\u3002</p>"},{"location":"ch08%20%E6%95%B0%E7%BB%84%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2/27.%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/#strcspn","title":"strcspn()","text":"<p>\u76f4\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u5b57\u7b26\u96c6\u5339\u914d\u4e3a\u6b62\u3002</p>"},{"location":"ch09%20%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5/9.%20%E5%9C%A8%20switch%20%E8%AF%AD%E5%8F%A5%E4%B8%AD%E4%BD%BF%E7%94%A8%E8%8C%83%E5%9B%B4%E5%8C%B9%E9%85%8D/","title":"9. \u5728 switch \u8bed\u53e5\u4e2d\u4f7f\u7528\u8303\u56f4\u5339\u914d","text":"<p>\u6ce8\u610f\u4ee5\u4e0b case \u6807\u7b7e\u548c\u4f20\u7edf\u7684\u6807\u7b7e\u4e4b\u524d\u7684\u4e0d\u540c\u4e4b\u5904\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid fun(int key) {\n    switch (key) {\n    case 1 ... 5: {\n        printf(\"1 ... 5 \\n\");\n        break;\n    }\n    case 6 ... 10: {\n        printf(\"6 ... 10 \\n\");\n        break;\n    }\n    }\n}\n\nint main() {\n    fun(5);\n    fun(6);\n}\n</code></pre> <p>output:</p> <pre><code>1 ... 5 \n6 ... 10 \n</code></pre> <p>case \u8303\u56f4\u6807\u7b7e\u4e0d\u80fd\u6709\u91cd\u5408\u90e8\u5206\uff1a</p> <pre><code>#include &lt;stdio.h&gt;\n\nvoid fun(int key) {\n    switch (key) {\n    case 1 ... 5: {\n        printf(\"1 ... 5 \\n\");\n        break;\n    }\n    case 5 ... 10: {                // \u4e0d\u80fd\u6709\u91cd\u590d\u90e8\u5206\n        printf(\"5 ... 10 \\n\");\n        break;\n    }\n    }\n}\n\nint main() {\n    fun(5);\n    fun(6);\n}\n</code></pre> <p>\u5f53\u4e24\u4e2a case \u8303\u56f4\u6807\u7b7e\u6709\u91cd\u5408\u7684\u90e8\u5206\u7684\u65f6\u5019\uff0c\u7f16\u8bd1\u9636\u6bb5\u4f1a\u53d1\u751f\u9519\u8bef\u3002</p>"},{"location":"ch10%20%E5%87%BD%E6%95%B0/5.%20%E5%8F%AF%E5%8F%98%E9%95%BF%E5%BA%A6%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/","title":"5. \u53ef\u53d8\u957f\u5ea6\u51fd\u6570\u53c2\u6570\u7684\u4f7f\u7528","text":"<p>\u4f7f\u7528\u53ef\u53d8\u957f\u5ea6\u51fd\u6570\u53c2\u6570\u9700\u8981\u4f9d\u6b21\u8c03\u7528\u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570\uff0c\u6765\u4ece\u6808\u4e2d\u53d6\u51fa\u53c2\u6570\u3002 va_list()           // \u5b58\u653e\u53ef\u53d8\u53c2\u6570\u7684\u7ed3\u6784\u4f53 va_start()      // \u5f00\u59cb\u53d6\u51fa\u53c2\u6570 va_arg()          // \u53d6\u51fa\u67d0\u4e2a\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u8fd4\u56de\u7ed9\u53d8\u91cf va_end()        // \u7ed3\u675f\u53d6\u51fa\u53c2\u6570</p> <pre><code>#include &lt;stdarg.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;vadefs.h&gt;\n\nint sum(int args, ...) {\n    va_list ap;\n    va_start(ap, args);     // va_start(1st param,2st param), \u5176\u4e2d\"2st param\"\u4e3a\u7d27\u63a5\u7740\u201c...\u201d\u524d\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\n    int sum_v = 0;\n    int temp = 0;\n    for (int i = 0; i &lt; args; ++i) {\n        temp = va_arg(ap, int);    // \u4f9d\u6b21\u53d6\u51fa\u53c2\u6570\n        sum_v += temp;\n    }\n    va_end(ap);\n    return sum_v;\n}\n\nint main() {\n    int sum_v = sum(5, 1, 2, 3, 4, 5);\n    printf(\"%d\\n\", sum_v);\n}\n</code></pre> <p>output:</p> <pre><code>15\n</code></pre> <p>\u9047\u5230\u7684\u5751\uff1a</p> <p>void va_start( va_list ap, parmN );</p> <p>\u53ef\u53d8\u53c2\u6570\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0d\u4e00\u5b9a\u5c31\u662f\u957f\u5ea6\u3002</p> <p>\u5728<code>va_start</code>\u51fd\u6570\u539f\u578b\u4e2d\uff0c<code>parmN</code>\u6307\u7684\u662f\u7b2c\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\u3002</p>"},{"location":"ch14%20%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/2.%20EOF%20%E5%92%8C%20feof%28%29%20%E7%9A%84%E5%8C%BA%E5%88%AB/","title":"2. EOF \u548c feof() \u7684\u533a\u522b","text":"<p>\u5f53\u8bfb\u53d6\u6587\u4ef6\u6d41\u5931\u8d25\uff0c\u6216\u8005\u5230\u8fbe\u6587\u4ef6\u672b\u5c3e\u65f6\uff0cgetc() \u90fd\u4f1a\u8fd4\u56de EOF \uff0c\u6240\u4ee5\u4e0d\u80fd\u4ec5\u51ed EOF \u6765\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5168\u90e8\u8bfb\u53d6\u5b8c\u6bd5\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n    FILE *f = fopen(\"test.txt\", \"r\");\n    if(!f){ \n        perror(\"fopen error\");\n        return errno;\n    }\n\n    int c;\n    while ((c = fgetc(f)) != EOF) {\n        putc(c, stdout);\n    }\n\n    if (ferror(f)) {\n        puts(\"read file stream is error!\");\n    }\n\n    if (feof(f)) {\n        puts(\"read file reach end.\");\n    }\n    fclose(f);\n    return EXIT_SUCCESS;\n}\n</code></pre> <p>test.txt \u6587\u4ef6\u5185\u5bb9\uff1a</p> <pre><code>/* test.txt */\nhey\n\nthere is some words,\n\nhello\nworld\n\n\n</code></pre> <p>output:</p> <pre><code>hey\n\nthere is some words,\n\nhello\nworld\n\nread file reach end.\n</code></pre>"},{"location":"ch14%20%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/3.%20fopen%28%29%20%E7%94%A8%E4%BA%8E%E5%86%99%E5%85%A5%E7%8E%B0%E6%9C%89%E6%96%87%E4%BB%B6/","title":"3. fopen() \u7528\u4e8e\u5199\u5165\u73b0\u6709\u6587\u4ef6","text":""},{"location":"ch14%20%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/3.%20fopen%28%29%20%E7%94%A8%E4%BA%8E%E5%86%99%E5%85%A5%E7%8E%B0%E6%9C%89%E6%96%87%E4%BB%B6/#w","title":"\"w\" \u6a21\u5f0f\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u7684\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u5c06\u6587\u4ef6\u89c6\u4e3a\u7a7a\u767d\u6587\u4ef6\u3002","text":"<pre><code>#include &lt;stddef.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n    FILE *f = fopen(\"fopen_w.txt\", \"w\");\n    if (!f) {\n        perror(\"fopen error\");\n        return EXIT_FAILURE;\n    }\n\n    const char *str = \"hello world\";\n    size_t str_length = strlen(str);\n\n    for (int i = 0; i &lt; str_length; ++i) {\n        putc(str[i], f);\n    }\n\n    fclose(f);\n}\n</code></pre> <p>\u5728 fopen_w.txt \u6587\u4ef6\u4e2d\u6210\u529f\u521b\u5efa\u6587\u672c\uff1a</p> <pre><code>hello world\n</code></pre>"},{"location":"ch14%20%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/3.%20fopen%28%29%20%E7%94%A8%E4%BA%8E%E5%86%99%E5%85%A5%E7%8E%B0%E6%9C%89%E6%96%87%E4%BB%B6/#wx-null","title":"\u201cwx\u201d \u6a21\u5f0f\uff0c\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u8fd4\u56de NULL\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u65b0\u6587\u4ef6\u3002","text":"<pre><code>#include &lt;errno.h&gt;\n#include &lt;stdio.h&gt;\n\nint main() {\n    FILE *f = fopen(\"test.txt\", \"wx\");\n    if (!f) {\n        perror(\"fopen error\");\n        return errno;\n    }\n\n    getchar();\n\n    fclose(f);\n}\n</code></pre> <p>\u5728\u6587\u4ef6 test.txt \u5df2\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u8f93\u51fa\uff1a</p> <pre><code>fopen error: File exists\n</code></pre>"}]}